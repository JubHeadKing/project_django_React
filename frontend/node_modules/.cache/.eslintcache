[{"D:\\Cursos\\Programación\\project_django\\frontend\\src\\index.js":"1","D:\\Cursos\\Programación\\project_django\\frontend\\src\\reportWebVitals.js":"2","D:\\Cursos\\Programación\\project_django\\frontend\\src\\App.js":"3"},{"size":535,"mtime":1696971847299,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1696971847317,"results":"6","hashOfConfig":"5"},{"size":5406,"mtime":1696978192938,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mxm4we",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17"},"D:\\Cursos\\Programación\\project_django\\frontend\\src\\index.js",[],[],"D:\\Cursos\\Programación\\project_django\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Cursos\\Programación\\project_django\\frontend\\src\\App.js",["18","19","20","21","22"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';  \nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = true;\n\nconst client = axios.create({\n  baseURL: \"http://127.0.0.1:800\"\n});\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState();\n  const [registrationToggle, setRegistrationToggle] = useState(false);\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    client.get(\"/api/user\")\n    .then(function(res) {\n      setCurrentUser(true);\n    })\n    .catch(function(error) {\n      setCurrentUser(false);\n    })\n  }, []);\n\n  function update_form_btn(){\n    if (registrationToggle) {\n      document.getElementById(\"form_btn\").innerHTML = \"Register\";\n      setRegistrationForm(false);\n    } else {\n      document.getElementById(\"form_btn\").innerHTML = \"Log in\";\n      setRegistrationForm(true);\n    }\n  }\n\n  function submitRegistration(e){\n    e.preventDefault();\n    client.post(\n      \"/apu/register\",\n      {\n        email: email,\n        username: username,\n        password: password\n      }\n    ).then(function(res) {\n      client.post(\n        \"/api/login\",\n        {\n          email: email,\n          password: password\n        }\n      ).then(function(res) {\n        setCurrentUser(true);\n      });\n    });\n  }\n\n  function submitLogin(e) {\n    e.preventDefault();\n    client.post(\n      \"/api/login\",\n        {\n          email: email,\n          password: password\n        }\n    ).then(function(res) {\n      setCurrentUser(true)\n    });\n  }\n\n  function submitLogout(e) {\n    e.preventDefault();\n    client.post(\n      \"/api/logout\",\n      {withCredentials: true}\n    ). then(function(res) {\n      setCurrentUser(false);\n    });\n  }\n\n  if (currentUser){\n    return (\n        <div>\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand>Authentication App</Navbar.Brand>\n              <Navbar.Toggle />\n              <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                  <form onSubmit={e => submitLogout(e)}>\n                    <Button type=\"submit\" variant=\"light\">Log Out</Button>\n                  </form>\n                </Navbar.Text>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n          <div className=\"center\">\n            <h2>You're logged in!</h2>\n          </div>\n        </div>\n    );\n  }\n  return (\n    <div>\n     <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>Authentication App</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          <button id=\"form_btn\" onClick={update_form_btn} variant=\"light\">Register</button>\n        </Navbar.Text>\n        </Navbar.Collapse>\n      </Container>      \n      </Navbar> \n      {\n        registrationToggle ? (\n          <div className=\"center\">\n          <Form onSubmit={e => submitRegistration(e)}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={e => setUsername(e.target.value)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>        \n        ) : (\n          <div className=\"center\">\n          <Form onSubmit={e => submitLogin(e)}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"27","line":22,"column":30,"nodeType":"25","messageId":"26","endLine":22,"endColumn":51},{"ruleId":"28","severity":2,"message":"29","line":40,"column":7,"nodeType":"25","messageId":"30","endLine":40,"endColumn":26},{"ruleId":"28","severity":2,"message":"29","line":43,"column":7,"nodeType":"25","messageId":"30","endLine":43,"endColumn":26},{"ruleId":"31","severity":1,"message":"32","line":84,"column":5,"nodeType":"33","messageId":"34","endLine":87,"endColumn":12,"fix":"35"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setRegistrationToggle' is assigned a value but never used.","no-undef","'setRegistrationForm' is not defined.","undef","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"36","text":"37"},[2024,2026],"."]